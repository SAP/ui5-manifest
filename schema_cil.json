{
  "title": "SAP JSON schema for Web Application Manifest File (CIL)",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "required": [
    "_version",
    "sap.app",
    "sap.ui"
  ],
  "additionalProperties": false,
  "properties": {
    "_version": {
      "description": "Represents Application Descriptor format version. It is managed by schema owner",
      "type": "string",
      "enum": [
        "1.1.0",
        "1.2.0",
        "1.3.0",
        "1.4.0",
        "1.5.0",
        "1.6.0",
        "1.7.0",
        "1.8.0",
        "1.9.0",
        "1.10.0",
        "1.11.0",
        "1.12.0",
        "1.13.0",
        "1.14.0",
        "1.15.0",
        "1.16.0",
        "1.17.0",
        "1.18.0",
        "1.19.0",
        "1.20.0",
        "1.21.0",
        "1.22.0",
        "1.23.0"
      ]
    },
    "start_url": {
      "description": "Represents the URL that the developer would prefer the user agent load when the user launches the web application",
      "type": "string"
    },
    "sap.app": {
      "title": "JSON schema for SAP.APP Namespace (CIL)",
      "description": "Represents general application attributes",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id",
        "type",
        "title",
        "embeddedBy"
      ],
      "properties": {
        "_version": {
          "description": "Application attributes format version. It is managed by namespace owner",
          "type": "string",
          "enum": [
            "1.1.0",
            "1.2.0",
            "1.3.0",
            "1.4.0",
            "1.5.0",
            "1.6.0",
            "1.7.0",
            "1.8.0"
          ]
        },
        "sourceTemplate": {
          "description": "Represents the template from which the app was generated",
          "type": "object",
          "required": [
            "id",
            "version"
          ],
          "properties": {
            "id": {
              "description": "Represents id of the template from which the app was generated ",
              "type": "string"
            },
            "version": {
              "description": "Represents the version of the template from which the app was generated",
              "type": "string"
            }
          }
        },
        "id": {
          "description": "Represents mandatory unique app identifier which must correspond to component 'id/namespace'",
          "$ref": "#/definitions/id_def"
        },
        "type": {
          "description": "Represents type of an application and can be application or component or library",
          "type": "string",
          "enum": [
            "application",
            "component",
            "library"
          ]
        },
        "i18n": {
          "default": "i18n/i18n.properties",
          "description": "Represents path inside the app to the properties file containing text symbols for the Descriptor or properties file specific settings (including supportedLocales, fallbackLocale, terminologies and enhanceWith)",
          "oneOf": [
            {
              "default": "i18n/i18n.properties",
              "type": "string"
            },
            {
              "type": "object",
              "required": [
                "bundleName"
              ],
              "additionalProperties": false,
              "properties": {
                "bundleName": {
                  "description": "Represents the alternative for bundleUrl",
                  "type": "string"
                },
                "fallbackLocale": {
                  "description": "Represents the fallback locale",
                  "type": "string"
                },
                "supportedLocales": {
                  "description": "Represents the list of supported locales",
                  "type": "array"
                },
                "terminologies": {
                  "description": "Represents terminologies with additional properties files",
                  "type": "object",
                  "additionalProperties": false,
                  "patternProperties": {
                    "^[a-zA-Z0-9_\\-]*$": {
                      "$ref": "#/definitions/terminologySetting"
                    }
                  }
                },
                "enhanceWith": {
                  "description": "Represents enhancement of UI5 resource model with additional properties files",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/enhanceWithSetting"
                  }
                }
              }
            },
            {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "bundleUrl"
              ],
              "properties": {
                "bundleUrl": {
                  "description": "Represents the URL for the resource bundle",
                  "type": "string"
                },
                "bundleUrlRelativeTo": {
                  "description": "Indicates whether url is relative to component (default) or manifest",
                  "type": "string",
                  "default": "component",
                  "enum": [
                    "manifest",
                    "component"
                  ]
                },
                "supportedLocales": {
                  "description": "Represents the list of supported locales",
                  "type": "array"
                },
                "fallbackLocale": {
                  "description": "Represents the fallback locale",
                  "type": "string"
                },
                "terminologies": {
                  "description": "Represents terminologies with additional properties files",
                  "type": "object",
                  "additionalProperties": false,
                  "patternProperties": {
                    "^[a-zA-Z0-9_\\-]*$": {
                      "$ref": "#/definitions/terminologySetting"
                    }
                  }
                },
                "enhanceWith": {
                  "description": "Represents enhancement of UI5 resource model with additional properties files",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/enhanceWithSetting"
                  }
                }
              }
            }
          ]
        },
        "embeddedBy": {
          "description": "Represents relative path back to the manifest.json of an embedding component or library (mandatory for nested 'manifest.json')",
          "type": "string"
        },
        "title": {
          "description": "Represents a title (mandatory); to make this property language dependent (recommended), use a key in double curly brackets '{{key}}'",
          "type": "string"
        },
        "subTitle": {
          "description": "Represents a subtitle to the title; to make this property language dependent (recommended), use a key in double curly brackets '{{key}}'",
          "type": "string"
        },
        "shortTitle": {
          "description": "Represents a shorter version of the title; to make this property language dependent (recommended), use a key in double curly brackets '{{key}}'",
          "type": "string"
        },
        "description": {
          "description": "Represents a description; to make this property language dependent (recommended), use a key in double curly brackets '{{key}}'",
          "type": "string"
        },
        "ach": {
          "description": "Represents application component hierarchy",
          "type": "string",
          "pattern": "^([a-zA-Z0-9]{2,3})(-[a-zA-Z0-9]{1,6})*$"
        },
        "dataSources": {
          "description": "Represents used data sources with a unique key/alias",
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9_\\.\\-]*$": {
              "$ref": "#/definitions/dataSource"
            }
          }
        },
        "cdsViews": {
          "description": "Represents array of directly used CDS views, which only to be added if directly used via INA protocol and not if used via OData service",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resources": {
          "description": "Represents reference to a file (naming convention is resources.json) which contains list with all resources which the app needs",
          "type": "string",
          "enum": [
            "resources.json"
          ]
        },
        "openSourceComponents": {
          "description": "Represents a collection of directly used open source libs (not when used via UI5 capsulation)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/openSource"
          }
        },
        "offline": {
          "description": "Represents indicator whether the app is running offline. Possible values are true or false (default)",
          "type": "boolean",
          "default": false
        }
      },
      "definitions": {
        "version": {
          "type": "string"
        },
        "i18n_key": {
          "type": "string",
          "pattern": "^\\{\\{[\\w][\\w\\.\\-]*\\}\\}$"
        },
        "objectName": {
          "type": "string",
          "pattern": "^(\\\\[0-9a-zA-Z_]+\\\\)?[a-zA-Z][a-zA-Z0-9_]*$",
          "minLength": 3,
          "maxLength": 50
        },
        "objectType": {
          "type": "string",
          "enum": [
            "query",
            "cdsprojectionview",
            "view",
            "inamodel"
          ]
        }
      }
    },
    "sap.ui": {
      "title": "JSON schema for SAP.UI Namespace (CIL)",
      "description": "Represents general ui attributes",
      "type": "object",
      "required": [
        "technology",
        "deviceTypes"
      ],
      "properties": {
        "_version": {
          "description": "Represents UI attributes format version. It is managed by namespace owner",
          "type": "string",
          "enum": [
            "1.1.0",
            "1.2.0",
            "1.3.0",
            "1.4.0",
            "1.5.0"
          ]
        },
        "technology": {
          "description": "Represents UI technology. The possible values are UI5 (default), WDA, NWBC, GUI, URL and WCF",
          "type": "string",
          "enum": [
            "UI5",
            "WDA",
            "NWBC",
            "GUI",
            "URL",
            "WCF"
          ],
          "default": "UI5"
        },
        "deviceTypes": {
          "description": "Represents device types on which application is running. Supported device types are desktop, tablet and phone",
          "allOf": [
            {
              "$ref": "#/definitions/deviceType"
            },
            {
              "required": [
                "desktop",
                "tablet",
                "phone"
              ]
            }
          ]
        },
        "supportedThemes": {
          "description": "The property is Deprecated. Represents array of supported SAP themes such as sap_hcb, sap_bluecrystal",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "sap.ui5": {
      "title": "JSON schema for SAP.UI5 Namespace (CIL)",
      "description": "Represents sapui5 attributes",
      "allOf": [
        {
          "type": "object",
          "required": [
            "dependencies",
            "contentDensities"
          ],
          "properties": {
            "_version": {
              "description": " Represents SAPUI5 attributes format version. It is managed by namespace owner",
              "type": "string",
              "enum": [
                "1.1.0",
                "1.2.0",
                "1.3.0",
                "1.4.0",
                "1.5.0",
                "1.6.0",
                "1.7.0",
                "1.8.0",
                "1.9.0",
                "1.10.0",
                "1.11.0"
              ]
            },
            "resources": {
              "description": "Represents paths to JavaScript/CSS resources that your app needs (app internal), formerly called '.includes'",
              "$ref": "#/definitions/resource"
            },
            "componentUsages": {
              "description": "Represents the explicit usage declaration for UI5 reuse components",
              "type": "object",
              "additionalProperties": false,
              "patternProperties": {
                "^[a-zA-Z0-9_\\.]*$": {
                  "$ref": "#/definitions/componentUsages"
                }
              }
            },
            "dependencies": {
              "description": "Represents external dependences such as libraries or components, that will be loaded by UI5 Core in the initialization phase of your Component and can be used after it",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "libs": {
                  "description": "Represents the id (namespace) of the libraries that should be loaded by UI5 Core to be used in your component",
                  "type": "object",
                  "additionalProperties": false,
                  "patternProperties": {
                    "^([a-z][a-z0-9]{0,39})(\\.[a-z][a-z0-9]{0,39})*$": {
                      "$ref": "#/definitions/lib"
                    }
                  }
                },
                "components": {
                  "description": "Represents the id (namespace) of the components that should be loaded by UI5 Core to be used in your component",
                  "type": "object",
                  "additionalProperties": false,
                  "patternProperties": {
                    "^([a-zA-Z_$][a-zA-Z0-9_$]{0,39}\\.)*([a-zA-Z_$][a-zA-Z0-9_$]{0,39})$": {
                      "$ref": "#/definitions/component"
                    }
                  }
                }
              }
            },
            "models": {
              "description": "Represents models which should be created/destroyed with the life-cycle of the component",
              "type": "object",
              "additionalProperties": false,
              "patternProperties": {
                "^[a-zA-Z0-9_\\.\\-\\|@]*$": {
                  "$ref": "#/definitions/model"
                }
              }
            },
            "resourceRoots": {
              "description": "Represents relative path to the resource. Only relative path allowed, no '../' ",
              "type": "object",
              "additionalProperties": false,
              "patternProperties": {
                "^[a-zA-Z0-9_\\.\\-]*$": {
                  "$ref": "#/definitions/resourceRoot"
                }
              }
            },
            "handleValidation": {
              "description": "Represents the usage of validation handling by MessageManager for this component (enable/disable)",
              "type": "boolean",
              "default": false
            },
            "config": {
              "description": "Represents the static configuration for components",
              "type": "object",
              "additionalProperties": false,
              "patternProperties": {
                "[\\s\\S]*": {
                  "$ref": "#/definitions/config"
                }
              }
            },
            "extends": {
              "description": "Represents the extension of an additional component",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "component": {
                  "description": "Represents the component name",
                  "$ref": "#/definitions/id_def"
                },
                "minVersion": {
                  "description": "Represents minimal version of the component",
                  "$ref": "#/definitions/version"
                },
                "extensions": {
                  "description": "Represents extensions of the component",
                  "type": "object"
                }
              }
            },
            "contentDensities": {
              "description": "Represents object with content density modes the app is supporting. Supported density modes are 'cozy' and 'compact'",
              "type": "object",
              "additionalProperties": false,
              "required": [
                "compact",
                "cozy"
              ],
              "properties": {
                "compact": {
                  "description": "Represents indicator whether compact mode is supported",
                  "type": "boolean"
                },
                "cozy": {
                  "description": "Represents indicator whether cozy mode is supported",
                  "type": "boolean"
                }
              }
            },
            "componentName": {
              "description": "Represents a name of the UI5 component",
              "type": "string",
              "pattern": "^([a-zA-Z_$][a-zA-Z0-9_$]{0,39}\\.)*([a-zA-Z_$][a-zA-Z0-9_$]{0,39})$"
            },
            "autoPrefixId": {
              "description": "Enables the auto prefixing of IDs of ManagedObjects (e.g. Controls) which are created in context of the Component (e.g. createContent invocation)",
              "type": "boolean"
            },
            "services": {
              "description": "Represents a list of the services ",
              "type": "object",
              "additionalProperties": false,
              "patternProperties": {
                "[\\s\\S]*": {
                  "$ref": "#/definitions/service"
                }
              }
            },
            "commands": {
              "description": "Represents a list of UI5 shortcut commands",
              "type": "object",
              "additionalProperties": false,
              "patternProperties": {
                "^[A-Za-z_][A-Za-z0-9_\\-\\|@]+$": {
                  "$ref": "#/definitions/command"
                }
              }
            }
          }
        },
        {
          "type": "object",
          "properties": {
            "routing": {
              "$ref": "#/definitions/routing"
            },
            "rootView": {
              "$ref": "#/definitions/rootView_def"
            }
          }
        },
        {
          "oneOf": [
            {
              "type": "object",
              "required": [
                "flexEnabled"
              ],
              "properties": {
                "flexEnabled": {
                  "description": "Represents an Indicator whether a component inside a library is flex enabled",
                  "type": "boolean",
                  "enum": [
                    true
                  ]
                },
                "routing": {
                  "$ref": "#/definitions/routing_flexEnabled"
                },
                "rootView": {
                  "$ref": "#/definitions/rootView_def_flexEnabled"
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "flexEnabled": {
                  "description": "Represents an Indicator whether a component inside a library is flex enabled",
                  "type": "boolean",
                  "enum": [
                    false
                  ]
                },
                "routing": {
                  "$ref": "#/definitions/routing"
                },
                "rootView": {
                  "$ref": "#/definitions/rootView_def"
                }
              }
            }
          ]
        }
      ],
      "definitions": {
        "deviceType": {
          "type": "object",
          "description": "Represents device types on which the app is running",
          "additionalProperties": false,
          "properties": {
            "desktop": {
              "description": "Represents indicator whether desktop device is supported, default true",
              "type": "boolean"
            },
            "tablet": {
              "description": "Represents indicator whether tablet device is supported, default true",
              "type": "boolean"
            },
            "phone": {
              "description": "Represents indicator whether phone device is supported, default true",
              "type": "boolean"
            }
          }
        },
        "booleanOrString": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        }
      }
    },
    "sap.platform.abap": {
      "title": "JSON schema for SAP.PLATFORM.ABAP Namespace",
      "description": "Represents ABAP platform specific attributes",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "_version": {
          "description": "Represents attributes format version. It is managed by namespace owner",
          "type": "string",
          "enum": [
            "1.1.0",
            "1.2.0"
          ]
        },
        "uri": {
          "description": "Represents the uri of the app in the ABAP system",
          "type": "string"
        },
        "uriNwbc": {
          "description": "Represents the alternative uri of the app in the ABAP system for starting the application",
          "type": "string"
        }
      }
    },
    "sap.platform.hcp": {
      "title": "JSON schema for SAP.PLATFORM.HCP Namespace",
      "description": "Represents HANA Cloud Platform platform specific attributes",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "_version": {
          "description": "Represents attributes format version. It is managed by namespace owner",
          "type": "string",
          "enum": [
            "1.1.0",
            "1.2.0",
            "1.3.0"
          ]
        },
        "uri": {
          "description": "Represents the uri of the app in the HANA Cloud Platform",
          "type": "string"
        },
        "uriNwbc": {
          "description": "Represents the alternative uri of the app in the ABAP system for starting the application",
          "type": "string"
        },
        "providerAccount": {
          "description": "Represents the provider account of the HTML5 application",
          "type": "string"
        },
        "appName": {
          "description": "Represents the HTML5 application name",
          "type": "string",
          "pattern": "^[a-z][a-z0-9]{0,29}$"
        },
        "appVersion": {
          "description": "Represents the version of the HTML5 application",
          "type": "string"
        },
        "multiVersionApp": {
          "description": "Indicates that HCP application is multi-version enabled",
          "type": "boolean"
        }
      }
    },
    "sap.platform.cf": {
      "title": "JSON schema for SAP.PLATFORM.CF Namespace",
      "description": "Represents CF(Cloud Foundry) platform specific attributes",
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "_version": {
          "description": "Represents attributes format version. It is managed by namespace owner",
          "type": "string",
          "enum": [
            "1.1.0",
            "1.2.0"
          ]
        },
        "oAuthScopes": {
          "description": "Represents the authorization scope of the application",
          "type": "array",
          "items": {
            "type": "string"
          },
          "appHostId": {
            "description": "Application host id to which the HTML5 app belongs",
            "type": "string"
          },
          "changedOn": {
            "description": "Changed on time stamp of the HTML5 app",
            "type": "string"
          },
          "appName": {
            "description": "Represents the HTML5 application name",
            "type": "string",
            "pattern": "^[a-z][a-z0-9]{0,29}$"
          },
          "appVersion": {
            "description": "Represents the version of the HTML5 application",
            "type": "string"
          },
          "multiVersionApp": {
            "description": "Indicates wether an HTML5 application is multi-version enabled",
            "type": "boolean"
          }
        }
      }
    },
    "sap.fiori": {
      "title": "JSON schema for SAP.FIORI Namespace",
      "description": "Represents SAP Fiori  specific attributes",
      "type": "object",
      "required": [
        "registrationIds",
        "archeType"
      ],
      "additionalProperties": false,
      "properties": {
        "_version": {
          "description": "Represents attributes format version. It is managed by namespace owner",
          "type": "string",
          "enum": [
            "1.1.0",
            "1.2.0"
          ]
        },
        "registrationIds": {
          "description": "Represents array of registration ids, i.e. for Fiori apps fiori id(s)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "archeType": {
          "description": "Represents architecture type of an application. The supported types are transactional or analytical or factsheet or reusecomponent or fpmwebdynpro or designstudio",
          "type": "string",
          "enum": [
            "transactional",
            "analytical",
            "factsheet",
            "reusecomponent",
            "fpmwebdynpro",
            "designstudio"
          ]
        },
        "abstract": {
          "description": "Indicator that app is an abstract (generic) app which may not be used directly, but needs to be specialized in the SAP Fiori launchpad content",
          "type": "boolean"
        }
      }
    },
    "sap.ui.generic.app": {
      "title": "JSON schema for SAP.UI.GENERIC.APP Namespace",
      "description": "Represents GENERIC APP specific attributes",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "_version": {
          "type": "string",
          "enum": [
            "1.1.0",
            "1.2.0",
            "1.3.0",
            "1.4.0",
            "1.5.0"
          ]
        },
        "settings": {
          "description": "Represents global settings for the application controller",
          "$ref": "#/definitions/setting_def"
        },
        "pages": {
          "description": "Represents one ore more pages of an application. UI5 routing is created from the definitions in this section",
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/pages_array"
              }
            },
            {
              "type": "object",
              "additionalProperties": false,
              "patternProperties": {
                "^[a-zA-Z0-9_\\.\\-]+[\\|]?[a-zA-Z0-9_\\.\\-]+$": {
                  "$ref": "#/definitions/pages_map"
                }
              }
            }
          ]
        }
      }
    },
    "sap.fe": {
      "title": "JSON schema for SAP.FE Namespace",
      "description": "Represents specific attributes for Fiori Elements ",
      "type": "object"
    },
    "sap.flp": {
      "title": "JSON schema for SAP.FLP Namespace",
      "description": "Represents FLP specific attributes",
      "type": "object",
      "required": [
        "type"
      ],
      "additionalProperties": false,
      "properties": {
        "_version": {
          "description": "Represents attributes format version. It is managed by namespace owner",
          "type": "string",
          "enum": [
            "1.1.0",
            "1.2.0",
            "1.3.0"
          ]
        },
        "tileSize": {
          "description": "Represents size of the tile",
          "type": "string",
          "enum": [
            "1x1",
            "1x2"
          ]
        },
        "type": {
          "description": "Represents the type of FLP entry. It must be 'application' or 'tile' or 'plugin'",
          "type": "string",
          "enum": [
            "application",
            "tile",
            "plugin"
          ]
        },
        "config": {
          "description": "Represents configuration parameters of the FLP entry",
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9\\_\\.\\-]*$": {
              "description": "Represents the configuration key and values",
              "type": "object"
            }
          }
        },
        "origin": {
          "description": "Represents the original tile and target mapping which resulted in this app",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "tileId": {
              "description": "Represents the original tile which resulted in this app",
              "type": "string"
            },
            "targetMappingId": {
              "description": "Represents the original target mapping which resulted in this app",
              "type": "string"
            }
          }
        }
      }
    },
    "sap.ovp": {
      "title": "JSON schema for SAP.OVP Namespace",
      "description": "Represents OVP specific attributes",
      "type": "object",
      "required": [
        "cards"
      ],
      "dependencies": {
        "globalFilterEntityType": [
          "globalFilterModel"
        ]
      },
      "additionalProperties": false,
      "properties": {
        "_version": {
          "description": "Represents attributes format version. It is managed by namespace owner",
          "type": "string",
          "enum": [
            "1.1.0",
            "1.2.0",
            "1.3.0",
            "1.4.0"
          ]
        },
        "globalFilterModel": {
          "description": "Represents the name of global filter OData model, which  contains entities definition that are relevant for global filters",
          "type": "string",
          "pattern": "^[a-zA-Z0-9_\\.\\-\\|@]*$"
        },
        "globalFilterEntityType": {
          "description": "Represents the entity to use as global filter in the smart filter bar control",
          "type": "string",
          "pattern": "^[a-zA-Z0-9_\\.\\-\\|@]*$"
        },
        "globalFilterEntitySet": {
          "description": "Represents the entity set to use as global filter in the smart filter bar control",
          "type": "string",
          "pattern": "^[a-zA-Z0-9_\\.\\-\\|@]*$"
        },
        "showBasicSearch": {
          "description": "Represents a switch to include basic search in the global filters",
          "type": "boolean",
          "default": false
        },
        "disableErrorPage": {
          "description": "Represents a switch to disable the error page shown on load of overview page when no data is retreived from the backend",
          "type": "boolean",
          "default": false
        },
        "smartVariantRequired": {
          "description": "Represents a switch to activate smart variant management in the global filters",
          "type": "boolean",
          "default": true
        },
        "bHeaderExpanded": {
          "description": "Represents a switch to show smart filter bar in expanded or collapsed mode",
          "type": "boolean",
          "default": false
        },
        "containerLayout": {
          "description": "Represents the layout of the card container",
          "type": "string",
          "default": "fixed",
          "enum": [
            "fixed",
            "resizable"
          ]
        },
        "showDateInRelativeFormat": {
          "description": "Represents a switch to Enable or disable Relative or Normal date formating in ovp application",
          "type": "boolean",
          "default": true
        },
        "disableTableCardFlexibility": {
          "description": "Represents a switch to Enable or Disable the Flexibility of Table cards",
          "type": "boolean",
          "default": false
        },
        "enableLiveFilter": {
          "description": "Represents the switch to activate live update in the global filters, else manual update will be required",
          "type": "boolean",
          "default": true
        },
        "considerAnalyticalParameters": {
          "description": "Flag to enable/disable analytical parameter support for Smart filter bar",
          "type": "boolean",
          "default": false
        },
        "refreshIntervalInMinutes": {
          "description": "Time interval in minutes to auto refresh the card models",
          "type": "integer",
          "default": 1
        },
        "useDateRangeType": {
          "description": "Flag to enable/disable semantic date range control for Smart filter bar",
          "type": "boolean",
          "default": false
        },
        "chartSettings": {
          "description": "Represents the object to store analytical chart settings",
          "type": "object",
          "properties": {
            "showDataLabel": {
              "description": "Flag to enable data labels on analytical charts",
              "type": "boolean",
              "default": false
            }
          }
        },
        "cards": {
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9_\\.\\-]+$": {
              "$ref": "#/definitions/card"
            }
          }
        },
        "resizableLayout": {
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            "^cols_[0-9]+$": {
              "$ref": "#/definitions/resizableLayoutVariant"
            }
          }
        }
      }
    },
    "sap.wda": {
      "title": "JSON schema for SAP.WDA Namespace",
      "description": "Represents WDA specific attributes",
      "type": "object",
      "required": [
        "applicationId"
      ],
      "additionalProperties": false,
      "properties": {
        "_version": {
          "description": "Represents attributes format version. It is managed by namespace owner",
          "type": "string",
          "enum": [
            "1.1.0",
            "1.2.0"
          ]
        },
        "applicationId": {
          "description": "Represents ID of an application",
          "type": "string",
          "pattern": "^[a-zA-Z0-9\\/_]{1,30}$"
        },
        "configId": {
          "description": "Represents ID of an application configuration",
          "type": "string",
          "pattern": "^[a-zA-Z0-9\\/\\_]{1,32}$"
        },
        "flavorId": {
          "description": "Represents SAP Screen Personas Flavor ID",
          "type": "string",
          "pattern": "^[A-F0-9]{1,32}$"
        },
        "compatibilityMode": {
          "description": "Indicates that WebDynpro Application requires Compatibility Mode, while uses legacy shell services. Possible values are true or false (default)",
          "type": "boolean",
          "default": false
        }
      }
    },
    "sap.apf": {
      "title": "JSON schema for SAP.APF Namespace",
      "description": "Represents APF specific attributes",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "_version": {
          "description": "Represents attributes format version. It is managed by namespace owner",
          "type": "string",
          "enum": [
            "1.1.0",
            "1.2.0"
          ]
        },
        "activateFilterReduction": {
          "description": "Represents a switch to activate filter reduction so that filters in OData requests can be represented as ABAP select options",
          "type": "boolean",
          "default": false
        },
        "activateLrep": {
          "description": "Represents a switch to activate LREP as the persistence for configurations and texts",
          "type": "boolean",
          "default": false
        },
        "useHeadRequestForXsrfToken": {
          "description": "Represents a switch to use HEAD-Requests instead of GET-Requests when fetching the XSRF-Security-Token",
          "type": "boolean",
          "default": false
        }
      }
    },
    "sap.cloud.portal": {
      "title": "JSON schema for SAP.CLOUD.PORTAL Namespace",
      "description": "Represents Cloud Portal specific attributes",
      "type": "object"
    },
    "sap.gui": {
      "title": "JSON schema for SAP.GUI Namespace",
      "description": "Represents GUI specific attributes",
      "type": "object",
      "required": [
        "transaction"
      ],
      "additionalProperties": false,
      "properties": {
        "_version": {
          "description": "Represents attributes format version. It is managed by namespace owner",
          "type": "string",
          "enum": [
            "1.1.0",
            "1.2.0"
          ]
        },
        "transaction": {
          "description": "Represents transaction of an application",
          "type": "string",
          "pattern": "^[a-zA-Z0-9\\/_]{1,20}$"
        },
        "flavorId": {
          "description": "Represents SAP Screen Personas Flavor ID",
          "type": "string",
          "pattern": "^[A-F0-9]{1,32}$"
        }
      }
    },
    "sap.integration": {
      "title": "JSON schema for SAP.INTEGRATION Namespace",
      "description": "Represents Application Integration specific attributes",
      "type": "object",
      "required": [
        "urlTemplateId",
        "parameters"
      ],
      "properties": {
        "_version": {
          "description": "Represents attributes format version. It is managed by namespace owner",
          "type": "string",
          "enum": [
            "1.0.0"
          ]
        },
        "urlTemplateId": {
          "description": "Reference to the desired URL Template",
          "type": "string",
          "examples": [
            "template.sap.sfsf",
            "template.sap.ui5",
            "template.sap.wda"
          ]
        },
        "parameters": {
          "description": "Represents configuration parameters which will be used by Template Engine to compile URL Template",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "key",
              "value"
            ],
            "properties": {
              "key": {
                "type": "string",
                "description": "Represents the name of the desired parameter"
              },
              "value": {
                "type": "string",
                "description": "Represents the actual value of the desired parameter"
              }
            }
          }
        }
      }
    },
    "sap.wcf": {
      "title": "JSON schema for SAP.WCF Namespace",
      "description": "Represents WCF Application specific attributes",
      "type": "object",
      "required": [
        "wcf-target-id"
      ],
      "additionalProperties": false,
      "properties": {
        "_version": {
          "description": "Represents attributes format version. It is managed by namespace owner",
          "type": "string",
          "enum": [
            "1.1.0"
          ]
        },
        "wcf-target-id": {
          "description": "Represents the target technical id for a WCF Application",
          "type": "string",
          "pattern": "^[a-zA-Z0-9\\/_]{1,10}$"
        }
      }
    },
    "sap.ui.smartbusiness.app": {
      "title": "JSON schema for SAP.UI.SMARTBUSINESS.APP Namespace",
      "description": "Represents specific attributes for Smart Business  ",
      "type": "object"
    },
    "sap.mobile": {
      "title": "JSON schema for SAP.MOBILE Namespace",
      "description": "Represents mobile specific attributes",
      "type": "object",
      "required": [
        "definingRequests"
      ],
      "properties": {
        "_version": {
          "description": "Represents attributes format version. It is managed by namespace owner",
          "type": "string",
          "enum": [
            "1.1.0"
          ]
        },
        "definingRequests": {
          "description": "Represents mobile specific attributes",
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9_\\.\\-]*": {
              "$ref": "#/definitions/definingRequest"
            }
          }
        }
      }
    },
    "sap.copilot": {
      "title": "JSON schema for SAP.COPILOT Namespace",
      "description": "Represents specific attributes for SAP CoPilot",
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "_version": {
          "description": "Represents SAP.COPILOT attributes format version. It is managed by namespace owner",
          "type": "string",
          "enum": [
            "1.0.0",
            "1.1.0"
          ]
        },
        "contextAnalysis": {
          "description": "Settings for the context analysis features of SAP CoPilot",
          "type": "object",
          "additionalProperties": true,
          "properties": {
            "allowAddingObjectsFromAppScreenToCollection": {
              "description": "Enable/Disable the ability for SAP CoPilot to analyze your Application Screens and add the found objects to a Collection",
              "type": "boolean",
              "default": true
            },
            "whitelistedEntityTypes": {
              "description": "A list of the whitelisted EntityTypes, prefixed with their namespace, that SAP CoPilot can display. The empty list is ignored, thus allowing all EntityTypes by default.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "digitalAssistant": {
          "description": "Settings for the Digital Assistant features of SAP CoPilot",
          "type": "object",
          "additionalProperties": true,
          "properties": {
            "intentDefinition": {
              "description": "A list of Intent",
              "type": "object",
              "additionalProperties": false,
              "patternProperties": {
                "^[a-zA-Z0-9_\\.\\-]*$": {
                  "type": "object",
                  "additionalProperties": true,
                  "properties": {
                    "uri": {
                      "description": "Represents the uri of the intent",
                      "type": "string"
                    },
                    "dataSources": {
                      "description": "A list of the sap.app.dataSources used by the intent",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "i18n": {
                      "description": "Represents the uri of the translation file",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "sap.map": {
      "title": "JSON schema for SAP.MAP Namespace",
      "description": "Represents specific attributes for SAP.MAP  ",
      "type": "object"
    },
    "sap.url": {
      "title": "JSON schema for SAP.URL Namespace",
      "description": "Represents specific attributes for SAP URL",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "uri"
      ],
      "properties": {
        "_version": {
          "description": "Represents attributes format version. It is managed by namespace owner",
          "type": "string",
          "enum": [
            "1.0.0"
          ]
        },
        "uri": {
          "description": "Represents URI of an application",
          "type": "string"
        }
      }
    },
    "sap.platform.sfsf": {
      "title": "JSON schema for SAP.PLATFORM.SFSF Namespace",
      "description": "Represents SFSF platform specific attributes",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "appName"
      ],
      "properties": {
        "_version": {
          "description": "Represents attributes format version. It is managed by namespace owner",
          "type": "string",
          "enum": [
            "1.0.0"
          ]
        },
        "uri": {
          "description": "Represents the uri inside the SFSF app",
          "type": "string"
        },
        "appName": {
          "description": "Represents the SFSF application name",
          "type": "string"
        },
        "appVersion": {
          "description": "Represents the version of the SFSF application",
          "type": "string"
        }
      }
    },
    "sap.cloud": {
      "title": "JSON schema for SAP.CLOUD Namespace",
      "description": "Represents cloud platform specific attributes",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "_version": {
          "description": "Represents attributes format version. It is managed by namespace owner",
          "type": "string",
          "enum": [
            "1.0.0",
            "1.1.0",
            "1.2.0"
          ]
        },
        "service": {
          "description": "Unique Business Service Identifier",
          "type": "string",
          "pattern": "^[^- @#$%^&()!]+$"
        },
        "public": {
          "description": "Specify if the UI can be accessed from a different space than origin development space",
          "type": "boolean",
          "default": false
        }
      }
    }
  },
  "definitions": {
    "definingRequest": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "dataSource",
        "path"
      ],
      "properties": {
        "dataSource": {
          "description": "Represents reference to dataSource under sap.app",
          "type": "string"
        },
        "path": {
          "description": "Represents path to the title collection",
          "type": "string"
        },
        "retrieveStreams": {
          "description": "Represents indicator whether streams should be retrieved",
          "type": "boolean",
          "default": false
        }
      }
    },
    "levelsDef": {
      "description": "Plot area is a parent property which defines multiple other properties for smoothness and marker size",
      "type": "array"
    },
    "resizableLayoutVariantCardProperties": {
      "required": [
        "col",
        "row",
        "colSpan",
        "rowSpan"
      ],
      "description": "Represents the card properties is a layout variant",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "col": {
          "description": "Represents the grid column",
          "type": "integer"
        },
        "row": {
          "description": "Represents the grid row",
          "type": "integer"
        },
        "colSpan": {
          "description": "Represents the column span",
          "type": "integer"
        },
        "rowSpan": {
          "description": "Represents the row span",
          "type": "integer"
        },
        "visible": {
          "description": "Represents the visibility of the card",
          "type": "boolean",
          "default": true
        }
      }
    },
    "customActionsSetting": {
      "description": "Represents the properties for the custom actions in the Quick View Cards",
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "text": {
          "description": "Text displayed for extended actions in Quick View",
          "type": "string",
          "pattern": "^\\{\\{[^\\W\\.\\-][\\w\\.\\-]*\\}\\}$"
        },
        "press": {
          "description": "Name of the press handler for extended actions in Quick View",
          "type": "string",
          "pattern": "^[^\\W\\.\\-][\\w\\.\\-]*$"
        },
        "position": {
          "description": "Position of extended actions in Quick View",
          "type": "integer"
        }
      }
    },
    "timeAxisDef": {
      "description": "Represents the configuration to customize the time axis",
      "type": "object",
      "properties": {
        "levels": {
          "$ref": "#/definitions/levelsDef"
        }
      }
    },
    "plotAreaDef": {
      "description": "Plot area is a parent property which defines multiple other properties for smoothness and marker size",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "isSmoothed": {
          "description": "Represents whether smoother curves are required or not",
          "type": "boolean",
          "default": false
        },
        "markerSize": {
          "description": "Represents the size of the markers in scatter plots",
          "type": "integer"
        },
        "dataLabel": {
          "type": "object",
          "description": "dataLabel is a parent property that defines other properties for type",
          "additionalProperties": false,
          "properties": {
            "type": {
              "description": "Defines whether to display percentage values or actual counts in the donut chart",
              "type": "string",
              "enum": [
                "value",
                "percentage"
              ],
              "default": "value"
            }
          }
        }
      }
    },
    "objectStreamCardsSettingsDef": {
      "description": "Represents the Object Stream properties - properties that are passed to the Object Stream cards",
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "showFirstActionInFooter": {
          "description": "Represents the flag to show first action in footer of the Quickview cards",
          "type": "boolean",
          "default": false
        },
        "customActions": {
          "description": "Represents the custom actions in the Quick View Cards",
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/customActionsSetting"
          }
        }
      }
    },
    "defaultSpanDef": {
      "description": "Represents the card default grid size in columns and rows",
      "oneOf": [
        {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "cols",
            "rows"
          ],
          "properties": {
            "cols": {
              "description": "Represents the number of the number of grid columns",
              "type": "integer"
            },
            "rows": {
              "description": "Represents the number of the number of grid rows",
              "type": "integer"
            },
            "showOnlyHeader": {
              "description": "Represents if user wants to show only header part of card in resizable layout",
              "type": "boolean",
              "default": false
            },
            "minimumTitleRow": {
              "description": "If user wants to show more text in title then he/she can configure no of lines to be shown in title(Maximum allowed 3 lines)",
              "type": "integer",
              "default": 1,
              "pattern": "^[1-3]$"
            },
            "minimumSubTitleRow": {
              "description": "If user wants to show more text in title then he/she can configure no of lines to be shown in sub-title(Maximum allowed 2 lines)",
              "type": "integer",
              "default": 1,
              "pattern": "^[12]$"
            }
          }
        },
        {
          "type": "string",
          "enum": [
            "auto"
          ]
        }
      ]
    },
    "tab_setting": {
      "description": "Represents the tab specific properties - properties that are passed to a particular tab in a card",
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "annotationPath": {
          "description": "Represents the annotation path",
          "type": "string",
          "pattern": "^[a-zA-Z0-9_\\.\\-\\|@#]*$"
        },
        "selectionAnnotationPath": {
          "description": "Represents the selection annotation path",
          "type": "string",
          "pattern": "^[a-zA-Z0-9_\\.\\-\\|@#]*$"
        },
        "chartAnnotationPath": {
          "description": "Represents the chart annotation path",
          "type": "string",
          "pattern": "^[a-zA-Z0-9_\\.\\-\\|@#]*$"
        },
        "presentationAnnotationPath": {
          "description": "Represents the presentation annotation path",
          "type": "string",
          "pattern": "^[a-zA-Z0-9_\\.\\-\\|@#]*$"
        },
        "dataPointAnnotationPath": {
          "description": "Represents the data point annotation path",
          "type": "string",
          "pattern": "^[a-zA-Z0-9_\\.\\-\\|@#]*$"
        },
        "identificationAnnotationPath": {
          "description": "Represents the identification annotation path",
          "type": "string",
          "pattern": "^[a-zA-Z0-9_\\.\\-\\|@#]*$"
        },
        "dynamicSubtitleAnnotationPath": {
          "description": "Represents the dynamic subtitle annotation path",
          "type": "string",
          "pattern": "^[a-zA-Z0-9_\\.\\-\\|@#]*$"
        },
        "value": {
          "description": "Represents the drop down value to be shown",
          "type": "string"
        },
        "chartProperties": {
          "description": "This property is responsible for setting specific chart settings",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "plotArea": {
              "$ref": "#/definitions/plotAreaDef"
            },
            "timeAxis": {
              "$ref": "#/definitions/timeAxisDef"
            }
          }
        },
        "colorPalette": {
          "description": "Represents the configuration to customize the column stacked chart",
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object"
              }
            },
            {
              "type": "object"
            }
          ]
        }
      }
    },
    "card_setting": {
      "description": "Represents the card specific properties - properties that are passed to the card",
      "type": "object",
      "required": [
        "title"
      ],
      "additionalProperties": true,
      "properties": {
        "category": {
          "description": "Represents the category of the card- used in the card header",
          "type": "string",
          "pattern": "^\\{\\{[^\\W\\.\\-][\\w\\.\\-]*\\}\\}$"
        },
        "itemText": {
          "description": "Represents the user defined string in placeholder card",
          "type": "string",
          "pattern": "^\\{\\{[^\\W\\.\\-][\\w\\.\\-]*\\}\\}$"
        },
        "title": {
          "description": "Represents language-dependent title of the card - used in the card header",
          "type": "string",
          "pattern": "^\\{\\{[^\\W\\.\\-][\\w\\.\\-]*\\}\\}$"
        },
        "subTitle": {
          "description": "Represents language-dependent subtitle of the card - used in the card header",
          "type": "string",
          "pattern": "^\\{\\{[^\\W\\.\\-][\\w\\.\\-]*\\}\\}$"
        },
        "valueSelectionInfo": {
          "description": "Represents things like people, number of items",
          "type": "string",
          "pattern": "^\\{\\{[^\\W\\.\\-][\\w\\.\\-]*\\}\\}$"
        },
        "entitySet": {
          "description": "Represents the entity set that will be displayed in this card",
          "type": "string",
          "pattern": "^[a-zA-Z0-9_]+$"
        },
        "staticContent": {
          "description": "Represents the static content that will be displayed in this card",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "listFlavor": {
          "description": "Represents the flavor of the list to use in this card. The flavor can be bar chart, carousel or standard",
          "type": "string",
          "enum": [
            "standard",
            "bar",
            "carousel"
          ]
        },
        "listType": {
          "description": "Represents the type of list to use for this card. The list can be extended to display more information or condensed to take up less space on the card",
          "type": "string",
          "enum": [
            "extended",
            "condensed"
          ]
        },
        "sortBy": {
          "description": "Represents the sort key for the entity set",
          "type": "string"
        },
        "sortOrder": {
          "description": "Represents the sort order for the entity set",
          "type": "string",
          "enum": [
            "ascending",
            "descending"
          ]
        },
        "annotationPath": {
          "description": "Represents the annotation path",
          "type": "string",
          "pattern": "^[a-zA-Z0-9_\\.\\-\\|@#]*$"
        },
        "selectionAnnotationPath": {
          "description": "Represents the selection annotation path",
          "type": "string",
          "pattern": "^[a-zA-Z0-9_\\.\\-\\|@#]*$"
        },
        "chartAnnotationPath": {
          "description": "Represents the chart annotation path",
          "type": "string",
          "pattern": "^[a-zA-Z0-9_\\.\\-\\|@#]*$"
        },
        "presentationAnnotationPath": {
          "description": "Represents the presentation annotation path",
          "type": "string",
          "pattern": "^[a-zA-Z0-9_\\.\\-\\|@#]*$"
        },
        "dataPointAnnotationPath": {
          "description": "Represents the data point annotation path",
          "type": "string",
          "pattern": "^[a-zA-Z0-9_\\.\\-\\|@#]*$"
        },
        "identificationAnnotationPath": {
          "description": "Represents the identification annotation path",
          "type": "string",
          "pattern": "^[a-zA-Z0-9_\\.\\-\\|@#,]*$"
        },
        "kpiAnnotationPath": {
          "description": "Represents the KPI annotation path",
          "type": "string",
          "pattern": "^[a-zA-Z0-9_\\.\\-\\|@#]*$"
        },
        "selectionPresentationAnnotationPath": {
          "description": "Represents the selection presentation annotation path",
          "type": "string",
          "pattern": "^[a-zA-Z0-9_\\.\\-\\|@#]*$"
        },
        "dynamicSubtitleAnnotationPath": {
          "description": "Represents the dynamic subtitle annotation path",
          "type": "string",
          "pattern": "^[a-zA-Z0-9_\\.\\-\\|@#]*$"
        },
        "ignoreSapText": {
          "description": "Represents the flag to indicate priority of number formatting over sap text",
          "type": "boolean",
          "default": false
        },
        "defaultSpan": {
          "$ref": "#/definitions/defaultSpanDef"
        },
        "requireAppAuthorization": {
          "description": "Represents the cards for which authorization is required",
          "type": "string"
        },
        "objectStreamCardsSettings": {
          "$ref": "#/definitions/objectStreamCardsSettingsDef"
        },
        "enableLocaleCurrencyFormatting": {
          "description": "Represents the flag to indicate the use of object number/smart field",
          "type": "boolean",
          "default": false
        },
        "navigation": {
          "description": "Represents the configuration to alter the navigation mode in OVP Analytical Cards",
          "type": "string",
          "enum": [
            "dataPointNav",
            "chartNav",
            "headerNav",
            "noHeaderNav"
          ]
        },
        "showFilterInHeader": {
          "description": "Represents a switch to Show or Hide Filters in Cards Headers in OVP application",
          "type": "boolean",
          "default": false
        },
        "showSortingInHeader": {
          "description": "Represents a switch to Show or Hide Sorting in Cards Headers in OVP application",
          "type": "boolean",
          "default": false
        },
        "imageSupported": {
          "description": "Flag for enabling images in a condensed list card",
          "type": "boolean",
          "default": false
        },
        "showLineItemDetail": {
          "description": "Flag for show line item detail in list and table card",
          "type": "boolean",
          "default": false
        },
        "showLabelText": {
          "description": "This property is responsible for showing and hiding text labels on the geo spots",
          "type": "boolean",
          "default": false
        },
        "customParams": {
          "description": "This property is responsible for passing custom parameters present in the entity set to the navigating application",
          "type": "string",
          "pattern": "^[^\\W\\.\\-][\\w\\.\\-]*$"
        },
        "chartProperties": {
          "description": "This property is responsible for setting specific chart settings",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "plotArea": {
              "$ref": "#/definitions/plotAreaDef"
            },
            "timeAxis": {
              "$ref": "#/definitions/timeAxisDef"
            }
          }
        },
        "colorPalette": {
          "description": "Represents the configuration to customize the column stacked chart",
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object"
              }
            },
            {
              "type": "object"
            }
          ]
        }
      }
    },
    "resizableLayoutVariant": {
      "description": "Represents the resizable layout variant",
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "^[a-zA-Z0-9_\\.\\-]+$": {
          "$ref": "#/definitions/resizableLayoutVariantCardProperties"
        }
      }
    },
    "card": {
      "description": "Represents the card attributes",
      "type": "object",
      "required": [
        "template"
      ],
      "additionalProperties": false,
      "properties": {
        "sequencePos": {
          "description": "Represents the position of the card in the sequence",
          "type": "integer"
        },
        "model": {
          "description": "Represents the model for the card",
          "type": "string",
          "pattern": "^[a-zA-Z0-9_\\.\\-\\|@]*$"
        },
        "template": {
          "description": "Represents the card component path to use for this card",
          "type": "string",
          "pattern": "^[a-zA-Z0-9\\.]+$"
        },
        "settings": {
          "$ref": "#/definitions/card_setting"
        },
        "tabs": {
          "description": "Represents the card with view switch control",
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/tab_setting"
          }
        }
      }
    },
    "defaultLayoutType_def": {
      "type": "string"
    },
    "implementingComponent_def": {
      "oneOf": [
        {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "componentName"
          ],
          "properties": {
            "componentName": {
              "description": "Represents the name of the component to be loaded inside the canvas",
              "type": "string",
              "pattern": "^([a-zA-Z][a-zA-Z0-9_]{0,39})(\\.[a-zA-Z][a-zA-Z0-9_]{0,39})*$"
            },
            "binding": {
              "$ref": "#/definitions/component_binding_def"
            },
            "settings": {
              "$ref": "#/definitions/component_setting_def"
            },
            "pages": {
              "$ref": "#/definitions/component_pages_def"
            }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "componentUsage"
          ],
          "properties": {
            "componentUsage": {
              "description": "Represents the reference to the name of the componentUsages defined in sap.ui5/componentUsages for the component to be loaded inside the canvas",
              "type": "string"
            },
            "binding": {
              "$ref": "#/definitions/component_binding_def"
            },
            "settings": {
              "$ref": "#/definitions/component_setting_def"
            },
            "pages": {
              "$ref": "#/definitions/component_pages_def"
            }
          }
        }
      ]
    },
    "routingSpec_def": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "routeName"
      ],
      "properties": {
        "routeName": {
          "description": "Represents the name of the route",
          "type": "string"
        },
        "noOData": {
          "description": "Represents the switch to indicate, that this route is not related to the OData service",
          "type": "boolean"
        },
        "binding": {
          "description": "Represents the binding string to indicate, how the page should be bound relative to the predecessor page or absolute",
          "type": "string"
        },
        "headerTitle": {
          "description": "Represents the the title to be shown on the page",
          "type": "string"
        },
        "typeImageUrl": {
          "description": "Represents the URL pointing to an icon, that will be shown in the navigation menu additional to the title to represent the page",
          "type": "string"
        },
        "noKey": {
          "description": "Represents the switch to indicate, whether this route is reached via a 1:1 navigation or a 1:n navigation",
          "type": "boolean"
        }
      }
    },
    "navigation_def": {
      "description": "Represents ...",
      "type": "object",
      "additionalProperties": false,
      "minProperties": 1,
      "properties": {
        "display": {
          "description": "Represents an action triggered by the user on UI: the navigation to display an object",
          "$ref": "#/definitions/action_prop_def"
        },
        "create": {
          "description": "Represents an action triggered by the user on UI: the navigation to create an object",
          "$ref": "#/definitions/action_prop_def"
        },
        "edit": {
          "description": "Represents an action triggered by the user on UI: the navigation to edit an object",
          "$ref": "#/definitions/action_prop_def"
        }
      }
    },
    "component_def": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "The name of the component",
          "type": "string",
          "pattern": "^([a-zA-Z][a-zA-Z0-9]{0,39})(\\.[a-zA-Z][a-zA-Z0-9]{0,39})*$"
        },
        "list": {
          "description": "Switch to create a route for a list (aggregation) if true and routing for an entity if not set or false",
          "type": "boolean"
        },
        "settings": {
          "$ref": "#/definitions/component_setting_def"
        }
      }
    },
    "component_pages_def": {
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "^[a-zA-Z0-9_\\.\\-]+[\\|]?[a-zA-Z0-9_\\.\\-]+$": {
          "$ref": "#/definitions/pages_map"
        }
      }
    },
    "component_binding_def": {
      "description": " Represents a binding string to indicate, how the reuse component should be bound relative to the containing page or absolute ",
      "type": "string"
    },
    "component_setting_def": {
      "description": "Represents the settings specific to one component",
      "type": "object"
    },
    "embeddedComponent": {
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "^[a-zA-Z0-9_.:-]+$": {
          "allOf": [
            {
              "type": "object",
              "required": [
                "id",
                "title"
              ],
              "properties": {
                "id": {
                  "description": "Represents an unique id for the instance of the reuse component inside of the object page",
                  "type": "string",
                  "pattern": "^([A-Za-z_][-A-Za-z0-9_.:]*)$"
                },
                "title": {
                  "description": "Represents the title for the content of the reuse component",
                  "type": "string",
                  "pattern": "^\\{\\{[^\\W][\\w\\.\\-]*\\}\\}$"
                },
                "binding": {
                  "description": "Represents an optional element binding  for the ComponentContainer that hosts the reuse component",
                  "type": "string"
                },
                "settings": {
                  "description": "Represents a map to populate the API of the reuse component",
                  "type": "object"
                },
                "hiddenByDefault": {
                  "description": "Flag, whether the embedded component should be hidden by default",
                  "type: ": "boolean"
                },
                "groupTitle": {
                  "description": "Represents group title of reuse components",
                  "type": "string"
                },
                "leadingSectionIdOrPath": {
                  "description": "Represents a section that behaves a leading section for the group",
                  "type": "string"
                }
              }
            },
            {
              "oneOf": [
                {
                  "type": "object",
                  "required": [
                    "componentName"
                  ],
                  "properties": {
                    "componentName": {
                      "description": "Represents the name of the reuse component ",
                      "type": "string",
                      "pattern": "^([a-zA-Z][a-zA-Z0-9_]{0,39})(\\.[a-zA-Z][a-zA-Z0-9_]{0,39})*$"
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "componentUsage"
                  ],
                  "properties": {
                    "componentUsage": {
                      "description": "Represents the reference to the name of the componentUsages defined in sap.ui5/componentUsages",
                      "type": "string"
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "embeddedComponents"
                  ],
                  "properties": {
                    "embeddedComponents": {
                      "$ref": "#/definitions/embeddedComponent"
                    }
                  }
                }
              ]
            }
          ]
        }
      }
    },
    "action_prop_def": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "path",
        "target"
      ],
      "properties": {
        "path": {
          "description": "Represents the path in the manifest to the target to which the navigation is bound",
          "type": "string"
        },
        "target": {
          "description": "Represents the pointer to a semantic object",
          "type": "string"
        },
        "refreshStrategyOnAppRestore": {
          "description": "Represents the refresh strategies configured for external display navigation while coming back to the source app",
          "$ref": "#/definitions/refreshStrategies_prop_def"
        }
      }
    },
    "refreshStrategies_prop_def": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "entitySets": {
          "description": "Represents the map of entity sets configured for refresh strategies",
          "type": "object"
        }
      }
    },
    "pages_map": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "component"
      ],
      "properties": {
        "navigationProperty": {
          "description": "Represents the navigation property that leads to this page. The navigation links of the previous page (the page that calls this one) are determined through this property ",
          "type": "string"
        },
        "entitySet": {
          "description": "Represents the entity set that defines either the aggregation or the root object of the component",
          "type": "string"
        },
        "component": {
          "description": "Represents the component and its settings that makes the page",
          "$ref": "#/definitions/component_def"
        },
        "navigation": {
          "description": "Represents the different navigation targets",
          "$ref": "#/definitions/navigation_def"
        },
        "embeddedComponents": {
          "description": "Represent reuse components that should be appended at the end of the template component",
          "$ref": "#/definitions/embeddedComponent"
        },
        "routingSpec": {
          "description": "Represents the routing specification",
          "$ref": "#/definitions/routingSpec_def"
        },
        "implementingComponent": {
          "description": "Represents the component to be loaded inside the canvas if sap.suite.ui.generic.template.Canvas is used as component name, and its settings",
          "$ref": "#/definitions/implementingComponent_def"
        },
        "defaultLayoutType": {
          "description": "Default layout used to open the corresponding page in FlexibleColumnLayout",
          "$ref": "#/definitions/defaultLayoutType_def"
        },
        "defaultLayoutTypeIfExternalNavigation": {
          "description": "Default layout used to open the corresponding page in FlexibleColumnLayout when reached via external navigation",
          "$ref": "#/definitions/defaultLayoutType_def"
        },
        "pages": {
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9_\\.\\-]+[\\|]?[a-zA-Z0-9_\\.\\-]+$": {
              "$ref": "#/definitions/pages_map"
            }
          }
        }
      }
    },
    "pages_array": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "component"
      ],
      "properties": {
        "navigationProperty": {
          "description": "Represents the navigation property that leads to this page. The navigation links of the previous page (the page that calls this one) are determined through this property ",
          "type": "string"
        },
        "entitySet": {
          "description": "Represents the entity set that defines either the aggregation or the root object of the component",
          "type": "string"
        },
        "component": {
          "description": "Represents the component and its settings that makes the page",
          "$ref": "#/definitions/component_def"
        },
        "navigation": {
          "description": "Represents the different navigation targets",
          "$ref": "#/definitions/navigation_def"
        },
        "embeddedComponents": {
          "description": "Represent reuse components that should be appended at the end of the template component",
          "$ref": "#/definitions/embeddedComponent"
        },
        "routingSpec": {
          "description": "Represents the routing specification",
          "$ref": "#/definitions/routingSpec_def"
        },
        "implementingComponent": {
          "description": "Represents the component to be loaded inside the canvas if sap.suite.ui.generic.template.Canvas is used as component name, and its settings",
          "$ref": "#/definitions/implementingComponent_def"
        },
        "defaultLayoutType": {
          "description": "Default layout used to open the corresponding page in FlexibleColumnLayout",
          "$ref": "#/definitions/defaultLayoutType_def"
        },
        "defaultLayoutTypeIfExternalNavigation": {
          "description": "Default layout used to open the corresponding page in FlexibleColumnLayout when reached via external navigation",
          "$ref": "#/definitions/defaultLayoutType_def"
        },
        "pages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pages_array"
          }
        }
      }
    },
    "setting_def": {
      "description": "Represents global settings for the application controller",
      "type": "object"
    },
    "routeTargetObject": {
      "description": "Represents the definition of a target of a route as object.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Represents the name of the routing target",
          "type": "string"
        },
        "prefix": {
          "description": "The prefix of the routing target",
          "type": "string"
        },
        "propagateTitle": {
          "description": "Indicates whether this 'Component' target should propagate it's title to this component or not",
          "type": "boolean",
          "default": "#/definitions/routing/config/propagateTitle"
        }
      }
    },
    "routeWithoutName": {
      "description": "Represents the definition of route without the option 'name'. This is used when routes are defined in an object.",
      "type": "object",
      "properties": {
        "pattern": {
          "description": "Represents the url pattern that the route is matched against",
          "type": "string"
        },
        "greedy": {
          "description": "Whether the route should be matched when another route is already matched",
          "type": "boolean"
        },
        "target": {
          "description": "Represents one or multiple names of targets which are displayed when the route is matched",
          "$ref": "#/definitions/routeTarget"
        },
        "titleTarget": {
          "description": "Represents the name of the target where the 'title' information should be taken",
          "type": "string"
        }
      }
    },
    "route": {
      "description": "Represents the definition of each route",
      "allOf": [
        {
          "$ref": "#/definitions/routeWithoutName"
        },
        {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Represents the name of the route",
              "type": "string"
            }
          }
        }
      ]
    },
    "target": {
      "description": "Represents the definition of each target",
      "type": "object",
      "properties": {
        "title": {
          "description": "Represents the information which is included as a parameter of the 'titleChanged' event fired on Router when this target is displayed. The title can be set with static text and can also be set with a valid property binding syntax which will be resolved under the scope of the view in the target where the title property is defined.",
          "type": "string"
        },
        "viewType": {
          "description": "Represents the type of view that is going to be created",
          "type": "string",
          "enum": [
            "XML",
            "JSON",
            "JS",
            "HTML",
            "Template"
          ]
        },
        "targetParent": {
          "description": "Represents the id of the view that contains the control specified by the 'controlId'",
          "type": "string"
        },
        "controlId": {
          "description": "Represents the id of the control where you want to place the view created by the target",
          "type": "string"
        },
        "controlAggregation": {
          "description": "Represents the name of an aggregation of the controlId that contains the views",
          "type": "string"
        },
        "clearControlAggregation": {
          "description": "Whether the aggregation of the control should be cleared before adding the view",
          "type": "boolean"
        },
        "parent": {
          "description": "Represents the name of another target which will also be displayed once this target is displayed",
          "type": "string"
        },
        "viewLevel": {
          "description": "Represents the level of the current view which is used to define the transition direction when navigate to this view",
          "type": "number",
          "multipleOf": 1
        },
        "transition": {
          "description": "Represents the type of transition when navigating from previous view to this view",
          "anyOf": [
            {
              "type": "string",
              "default": "slide"
            },
            {
              "type": "string",
              "enum": [
                "slide",
                "flip",
                "fade",
                "show"
              ]
            }
          ]
        },
        "transitionParameters": {
          "description": "Represents the transition parameters that are passed to the event handlers",
          "type": "object"
        }
      }
    },
    "routeTarget": {
      "description": "Represents the definition of a target of a route.",
      "oneOf": [
        {
          "type": "array",
          "items": [
            {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/definitions/routeTargetObject"
                }
              ]
            }
          ]
        },
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/routeTargetObject"
        }
      ]
    },
    "enhanceWithSetting_0": {
      "oneOf": [
        {
          "additionalProperties": false,
          "required": [
            "bundleUrl"
          ],
          "properties": {
            "bundleUrl": {
              "description": "Represents property url for model enhancement",
              "type": "string"
            },
            "bundleUrlRelativeTo": {
              "description": "Indicates whether url is relative to component (default) or manifest",
              "type": "string",
              "default": "component",
              "enum": [
                "manifest",
                "component"
              ]
            },
            "fallbackLocale": {
              "description": "Represents the fallback locale",
              "type": "string"
            },
            "supportedLocales": {
              "description": "Represents the list of supported locales",
              "type": "array"
            },
            "terminologies": {
              "description": "Represents terminologies with additional properties files",
              "type": "object",
              "patternProperties": {
                "^[a-zA-Z0-9_\\-]*$": {
                  "$ref": "#/definitions/terminologySetting"
                }
              }
            }
          }
        },
        {
          "required": [
            "bundleName"
          ],
          "additionalProperties": false,
          "properties": {
            "bundleName": {
              "description": "Represents the alternative for bundleUrl",
              "type": "string"
            },
            "supportedLocales": {
              "description": "Represents the list of supported locales",
              "type": "array"
            },
            "fallbackLocale": {
              "description": "Represents the fallback locale",
              "type": "string"
            },
            "terminologies": {
              "description": "Represents terminologies with additional properties files",
              "type": "object",
              "patternProperties": {
                "^[a-zA-Z0-9_\\-]*$": {
                  "$ref": "#/definitions/terminologySetting"
                }
              }
            }
          }
        }
      ]
    },
    "terminologySetting": {
      "oneOf": [
        {
          "additionalProperties": false,
          "required": [
            "bundleName"
          ],
          "properties": {
            "bundleName": {
              "description": "Represents the alternative for bundleUrl",
              "type": "string"
            },
            "supportedLocales": {
              "description": "Represents the list of supported locales",
              "type": "array"
            }
          }
        },
        {
          "additionalProperties": false,
          "required": [
            "bundleUrl"
          ],
          "properties": {
            "bundleUrl": {
              "description": "Represents the URL for the resource bundle",
              "type": "string"
            },
            "bundleUrlRelativeTo": {
              "description": "Indicates whether url is relative to component (default) or manifest",
              "type": "string",
              "default": "component",
              "enum": [
                "manifest",
                "component"
              ]
            },
            "supportedLocales": {
              "description": "Represents the list of supported locales",
              "type": "array"
            }
          }
        }
      ]
    },
    "ui5setting": {
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "defaultBindingMode": {
          "description": "Represents default binding mode and must be a string value from sap.ui.model.BindingMode. Possible values: Default, OneTime, OneWay, TwoWay",
          "type": "string",
          "default": "Default",
          "enum": [
            "Default",
            "OneTime",
            "OneWay",
            "TwoWay"
          ]
        },
        "bundleName": {
          "description": "Represents the alternative for bundleUrl",
          "type": "string"
        },
        "bundleUrl": {
          "description": "Represents the URL for the resource bundle",
          "type": "string"
        },
        "bundleUrlRelativeTo": {
          "description": "Indicates whether url is relative to component (default) or manifest",
          "type": "string",
          "default": "component",
          "enum": [
            "manifest",
            "component"
          ]
        },
        "fallbackLocale": {
          "description": "Represents the fallback locale",
          "type": "string"
        },
        "supportedLocales": {
          "description": "Represents the list of supported locales",
          "type": "array"
        },
        "terminologies": {
          "description": "Represents terminologies with additional properties files",
          "type": "object",
          "additionalProperties": true,
          "patternProperties": {
            "^[a-zA-Z0-9_\\-]*$": {
              "$ref": "#/definitions/terminologySetting"
            }
          }
        },
        "enhanceWith": {
          "description": "Represents enhancement of UI5 resource model with additional properties files",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/enhanceWithSetting"
          }
        }
      }
    },
    "rootView_def_flexEnabled": {
      "description": "Represents the root view definition when flex is enabled (requires a view id)",
      "type": "object",
      "required": [
        "id",
        "viewName"
      ],
      "additionalProperties": true,
      "properties": {
        "viewName": {
          "description": "Represents the name of the view",
          "type": "string"
        },
        "type": {
          "description": "Represents the type of the view. Possible Values: XML, JSON, JS, HTML, Template",
          "type": "string",
          "enum": [
            "XML",
            "JSON",
            "JS",
            "HTML",
            "Template"
          ]
        },
        "id": {
          "description": "Represents the id of the view",
          "type": "string"
        },
        "async": {
          "description": "Configure the targets for asynchronous loading",
          "type": "boolean",
          "default": false
        }
      }
    },
    "routing_flexEnabled": {
      "description": "Represents the configuration of routing",
      "type": "object",
      "properties": {
        "config": {
          "description": "Represents the default properties defined for route and target",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "routerClass": {
                  "description": "Represents the router class",
                  "type": "string"
                },
                "async": {
                  "description": "Indicates whether the Views in routing are loaded asyncly",
                  "type": "boolean",
                  "default": false
                },
                "bypassed": {
                  "description": "Represents information about targets to display when no route is matched",
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "target"
                  ],
                  "properties": {
                    "target": {
                      "description": "Represents one or multiple names of targets that are displayed when no route is matched",
                      "$ref": "#/definitions/routeTarget"
                    }
                  }
                },
                "viewPath": {
                  "description": "Represents a prefix that is prepended in front of the viewName",
                  "type": "string"
                }
              }
            },
            {
              "$ref": "#/definitions/target"
            }
          ]
        },
        "routes": {
          "oneOf": [
            {
              "description": "Represents the definition of routes by providing an array with elements which contain the configuration for each route",
              "type": "array",
              "items": {
                "$ref": "#/definitions/route"
              }
            },
            {
              "description": "Represents the definition of routes by providing an object with the route's name as the key and other route options in an object as the value",
              "type": "object",
              "patternProperties": {
                "[\\s\\S]*": {
                  "$ref": "#/definitions/routeWithoutName"
                }
              }
            }
          ]
        },
        "targets": {
          "description": "Represents the definition of targets",
          "type": "object",
          "patternProperties": {
            "[\\s\\S]*": {
              "oneOf": [
                {
                  "allOf": [
                    {
                      "$ref": "#/definitions/target"
                    },
                    {
                      "type": "object",
                      "required": [
                        "viewName",
                        "viewId"
                      ],
                      "properties": {
                        "viewName": {
                          "description": "Represents the name of a view that will be created",
                          "type": "string"
                        },
                        "viewId": {
                          "description": "Represents the id of the created view",
                          "type": "string"
                        },
                        "viewPath": {
                          "description": "Represents a prefix that is prepended in front of the viewName",
                          "type": "string"
                        }
                      }
                    }
                  ]
                },
                {
                  "allOf": [
                    {
                      "$ref": "#/definitions/target"
                    },
                    {
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "name",
                            "id"
                          ],
                          "properties": {
                            "name": {
                              "description": "Represents the name of a view or component that will be created",
                              "type": "string"
                            },
                            "id": {
                              "description": "Represents the id of the created view or component",
                              "type": "string"
                            },
                            "path": {
                              "description": "Represents a prefix that is prepended in front of the view or component name",
                              "type": "string"
                            },
                            "type": {
                              "description": "Represents the type of the type View or Component",
                              "type": "string",
                              "enum": [
                                "View",
                                "Component"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "usage",
                            "id",
                            "type"
                          ],
                          "properties": {
                            "usage": {
                              "description": "Represents the componentUsage of the component that will be created",
                              "type": "string"
                            },
                            "id": {
                              "description": "Represents the id of the created view or component",
                              "type": "string"
                            },
                            "type": {
                              "description": "Represents the type of the type Component",
                              "type": "string",
                              "enum": [
                                "Component"
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      }
    },
    "rootView_def": {
      "description": "Represents the root view definition being either the name of the view or the view definition object",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "required": [
            "viewName"
          ],
          "additionalProperties": true,
          "properties": {
            "viewName": {
              "description": "Represents the name of the view",
              "type": "string"
            },
            "type": {
              "description": "Represents the type of the view. Possible Values: XML, JSON, JS, HTML, Template",
              "type": "string",
              "enum": [
                "XML",
                "JSON",
                "JS",
                "HTML",
                "Template"
              ]
            },
            "id": {
              "description": "Represents the id of the view",
              "type": "string"
            }
          }
        }
      ]
    },
    "routing": {
      "description": "Represents the configuration of routing",
      "type": "object",
      "properties": {
        "config": {
          "description": "Represents the default properties defined for route and target",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "routerClass": {
                  "description": "Represents the router class",
                  "type": "string"
                },
                "async": {
                  "description": "Indicates whether the Views in routing are loaded asyncly",
                  "type": "boolean",
                  "default": false
                },
                "propagateTitle": {
                  "description": "Indicates whether the targets which have type 'Component' should propagate their title to this component or not",
                  "type": "boolean",
                  "default": false
                },
                "bypassed": {
                  "description": "Represents information about targets to display when no route is matched",
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "target"
                  ],
                  "properties": {
                    "target": {
                      "description": "Represents one or multiple names of targets that are displayed when no route is matched",
                      "$ref": "#/definitions/routeTarget"
                    }
                  }
                },
                "viewPath": {
                  "description": "Represents a prefix that is prepended in front of the viewName",
                  "type": "string"
                }
              }
            },
            {
              "$ref": "#/definitions/target"
            }
          ]
        },
        "routes": {
          "oneOf": [
            {
              "description": "Represents the definition of routes by providing an array with elements which contain the configuration for each route",
              "type": "array",
              "items": {
                "$ref": "#/definitions/route"
              }
            },
            {
              "description": "Represents the definition of routes by providing an object with the route's name as the key and other route options in an object as the value",
              "type": "object",
              "patternProperties": {
                "[\\s\\S]*": {
                  "$ref": "#/definitions/routeWithoutName"
                }
              }
            }
          ]
        },
        "targets": {
          "description": "Represents the definition of targets",
          "type": "object",
          "patternProperties": {
            "[\\s\\S]*": {
              "oneOf": [
                {
                  "allOf": [
                    {
                      "$ref": "#/definitions/target"
                    },
                    {
                      "type": "object",
                      "required": [
                        "viewName"
                      ],
                      "properties": {
                        "viewName": {
                          "description": "Represents the name of a view that will be created",
                          "type": "string"
                        },
                        "viewId": {
                          "description": "Represents the id of the created view",
                          "type": "string"
                        },
                        "viewPath": {
                          "description": "Represents a prefix that is prepended in front of the viewName",
                          "type": "string"
                        }
                      }
                    }
                  ]
                },
                {
                  "allOf": [
                    {
                      "$ref": "#/definitions/target"
                    },
                    {
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Represents the name of a view or component that will be created",
                              "type": "string"
                            },
                            "id": {
                              "description": "Represents the id of the created view or component",
                              "type": "string"
                            },
                            "path": {
                              "description": "Represents a prefix that is prepended in front of the view or component name",
                              "type": "string"
                            },
                            "type": {
                              "description": "Represents the type of the type View or Component",
                              "type": "string",
                              "enum": [
                                "View",
                                "Component"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "usage",
                            "type"
                          ],
                          "properties": {
                            "usage": {
                              "description": "Represents the componentUsage of the component that will be created",
                              "type": "string"
                            },
                            "id": {
                              "description": "Represents the id of the created view or component",
                              "type": "string"
                            },
                            "type": {
                              "description": "Represents the type of the type Component",
                              "type": "string",
                              "enum": [
                                "Component"
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      }
    },
    "command": {
      "description": "Represents a UI5 shortcut command.",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "shortcut": {
          "description": "A string describing a shortcut key combination that, when used by the user, will trigger the command.",
          "type": "string",
          "patternTransformCode": "''.split('').map(function(char) { console.log(char);  if (/[a-z]/i.test(char)) { return `[${char.toUpperCase()}${char.toLowerCase()}]`; } else { return char; } } ).join('')",
          "patternFromRuntime": "^((Ctrl|Shift|Alt)(\\+)?){0,3}([A-Za-z0-9\\.,\\-\\*\\/=]|Plus|Tab|Space|Enter|Backspace|Home|Delete|End|Pageup|Pagedown|Escape|ArrowUp|ArrowDown|ArrowLeft|ArrowRight|F[1-9]|F1[0-2])$",
          "pattern": "^(([Cc][Tt][Rr][Ll]|[Ss][Hh][Ii][Ff][Tt]|[Aa][Ll][Tt])(\\+)?){0,3}([A-Za-z0-9\\.,\\-\\*\\/=]|[Pp][Ll][Uu][Ss]|[Tt][Aa][Bb]|[Ss][Pp][Aa][Cc][Ee]|[Ee][Nn][Tt][Ee][Rr]|[Bb][Aa][Cc][Kk][Ss][Pp][Aa][Cc][Ee]|[Hh][Oo][Mm][Ee]|[Dd][Ee][Ll][Ee][Tt][Ee]|[Ee][Nn][Dd]|[Pp][Aa][Gg][Ee][Uu][Pp]|[Pp][Aa][Gg][Ee][Dd][Oo][Ww][Nn]|[Ee][Ss][Cc][Aa][Pp][Ee]|[Aa][Rr][Rr][Oo][Ww][Uu][Pp]|[Aa][Rr][Rr][Oo][Ww][Dd][Oo][Ww][Nn]|[Aa][Rr][Rr][Oo][Ww][Ll][Ee][Ff][Tt]|[Aa][Rr][Rr][Oo][Ww][Rr][Ii][Gg][Hh][Tt]|F[1-9]|F1[0-2])$"
        }
      }
    },
    "service": {
      "description": "Represents the definition of each service",
      "type": "object",
      "required": [
        "factoryName"
      ],
      "additionalProperties": true,
      "properties": {
        "factoryName": {
          "description": "Represents the name of the service factory ",
          "type": "string",
          "pattern": "^([a-z_$][a-z0-9_$]{0,39}\\.)*([a-zA-Z_$][a-zA-Z0-9_$]{0,39})$"
        },
        "optional": {
          "description": "Indicates whether the service optional or not ",
          "type": "boolean",
          "default": false
        }
      }
    },
    "version": {
      "type": "string"
    },
    "id_def_0": {
      "type": "string"
    },
    "config": {
      "oneOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "string"
        },
        {
          "type": "boolean"
        },
        {
          "type": "number"
        },
        {
          "type": "object"
        }
      ]
    },
    "resourceRoot": {
      "type": "string",
      "pattern": "^((\\.(?!\\.)\\/)?\\w+\\/?)+$"
    },
    "model": {
      "description": "Represents sapui5 model name",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "description": "Represents model class name",
          "type": "string"
        },
        "dataSource": {
          "description": "Represents string of key/alias from sap.app dataSources to reference an existing data source",
          "type": "string"
        },
        "uri": {
          "description": "Represents URI for the model",
          "type": "string"
        },
        "preload": {
          "description": "Indicates that the model will be immediately created after the manifest is loaded by Component Factory and before the Component instance is created",
          "type": "boolean",
          "default": false
        },
        "settings": {
          "$ref": "#/definitions/ui5setting"
        }
      }
    },
    "component": {
      "description": "Represents sapui5 component name",
      "type": "object",
      "properties": {
        "minVersion": {
          "description": "Represents minimal version of ui5 component",
          "$ref": "#/definitions/version"
        },
        "lazy": {
          "description": "Represents Indicator to lazy loading component",
          "type": "boolean",
          "default": false
        }
      }
    },
    "lib": {
      "description": "Represents sapui5 library name",
      "type": "object",
      "properties": {
        "minVersion": {
          "description": "Represents minimal version of ui5 library",
          "$ref": "#/definitions/version"
        },
        "lazy": {
          "description": "Represents Indicator to lazy loading lib",
          "type": "boolean",
          "default": false
        }
      }
    },
    "componentUsages": {
      "description": "Represents component name for usage",
      "type": "object",
      "required": [
        "name"
      ],
      "additionalProperties": false,
      "properties": {
        "name": {
          "description": "Represents name of reuse component",
          "type": "string",
          "pattern": "^([a-zA-Z_$][a-zA-Z0-9_$]{0,39}\\.)*([a-zA-Z_$][a-zA-Z0-9_$]{0,39})$"
        },
        "componentData": {
          "description": "Represents component data for the Component",
          "$ref": "#/definitions/config"
        },
        "settings": {
          "description": "Represents settings for the Component",
          "$ref": "#/definitions/config"
        },
        "lazy": {
          "description": "Represents Indicator to lazy loading component usage, default true",
          "type": "boolean",
          "default": true
        }
      }
    },
    "resource": {
      "type": "object",
      "properties": {
        "js": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "uri"
            ],
            "properties": {
              "uri": {
                "type": "string"
              }
            }
          }
        },
        "css": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "uri"
            ],
            "properties": {
              "uri": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "deviceType": {
      "type": "object",
      "description": "Represents device types on which the app is running",
      "additionalProperties": false,
      "properties": {
        "desktop": {
          "description": "Represents indicator whether desktop device is supported, default true",
          "type": "boolean"
        },
        "tablet": {
          "description": "Represents indicator whether tablet device is supported, default true",
          "type": "boolean"
        },
        "phone": {
          "description": "Represents indicator whether phone device is supported, default true",
          "type": "boolean"
        }
      }
    },
    "setting": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "odataVersion": {
          "description": "Represents version of OData: 2.0 is default",
          "type": "string",
          "enum": [
            "2.0",
            "4.0"
          ]
        },
        "localUri": {
          "description": "Represents path to local meta data document or annotation uri",
          "type": "string"
        },
        "annotations": {
          "description": "Represents  array of annotation which references an existing data source of type ODataAnnotation",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "objects": {
        "type": "object",
        "description": "Dictionary of (catalog) objects offered by the datasource",
        "additionalProperties": {
          "type": "object",
          "description": "A (catalog) object of an InA DataSource",
          "properties": {
            "objectName": {
              "$ref": "#/definitions/objectName"
            },
            "objectType": {
              "$ref": "#/definitions/objectType"
            },
            "packageName": {
              "type": "string"
            },
            "schemaName": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "required": [
            "objectName",
            "objectType"
          ]
        }
      }
    },
    "openSource": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "Represents a name of the open source as appears on the web",
          "type": "string"
        },
        "version": {
          "description": "Represents a version of the open source (if part of app, version must be specified, if part of UI5 dist layer, version is empty)",
          "type": "string"
        },
        "packagedWithMySelf": {
          "description": "Indicates, whether it is part of the app or not",
          "type": "boolean"
        }
      }
    },
    "dataSource": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "uri"
      ],
      "properties": {
        "uri": {
          "description": "Represents the uri of the data source, should always be given in lower case",
          "type": "string"
        },
        "type": {
          "description": "Represents type of the data source. The supported types are OData, ODataAnnotation, INA, XML, JSON, FHIR, WebSocket, http",
          "type": "string",
          "enum": [
            "OData",
            "ODataAnnotation",
            "INA",
            "XML",
            "JSON",
            "FHIR",
            "WebSocket",
            "http"
          ],
          "default": "OData"
        },
        "settings": {
          "description": "Represents data source type specific attributes (key, value pairs)",
          "$ref": "#/definitions/setting"
        }
      }
    },
    "enhanceWithSetting": {
      "oneOf": [
        {
          "additionalProperties": false,
          "required": [
            "bundleUrl"
          ],
          "properties": {
            "bundleUrl": {
              "description": "Represents property url for model enhancement",
              "type": "string"
            },
            "bundleUrlRelativeTo": {
              "description": "Indicates whether url is relative to component (default) or manifest",
              "type": "string",
              "default": "component",
              "enum": [
                "manifest",
                "component"
              ]
            },
            "fallbackLocale": {
              "description": "Represents the fallback locale",
              "type": "string"
            },
            "supportedLocales": {
              "description": "Represents the list of supported locales",
              "type": "array"
            },
            "terminologies": {
              "description": "Represents terminologies with additional properties files",
              "type": "object",
              "additionalProperties": false,
              "patternProperties": {
                "^[a-zA-Z0-9_\\-]*$": {
                  "$ref": "#/definitions/terminologySetting"
                }
              }
            }
          }
        },
        {
          "required": [
            "bundleName"
          ],
          "additionalProperties": false,
          "properties": {
            "bundleName": {
              "description": "Represents the alternative for bundleUrl",
              "type": "string"
            },
            "fallbackLocale": {
              "description": "Represents the fallback locale",
              "type": "string"
            },
            "supportedLocales": {
              "description": "Represents the list of supported locales",
              "type": "array"
            },
            "terminologies": {
              "description": "Represents terminologies with additional properties files",
              "type": "object",
              "additionalProperties": false,
              "patternProperties": {
                "^[a-zA-Z0-9_\\-]*$": {
                  "$ref": "#/definitions/terminologySetting"
                }
              }
            }
          }
        }
      ]
    },
    "id_def": {
      "type": "string",
      "maxLength": 70
    }
  }
}
